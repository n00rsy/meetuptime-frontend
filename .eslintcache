[{"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js":"1","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js":"2","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js":"3","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js":"4","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js":"5","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js":"6","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js":"7","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js":"8","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js":"9","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1002,"mtime":1606523619263,"results":"13","hashOfConfig":"12"},{"size":5617,"mtime":1606456407006,"results":"14","hashOfConfig":"12"},{"size":777,"mtime":1606437499067,"results":"15","hashOfConfig":"12"},{"size":1432,"mtime":1606442305526,"results":"16","hashOfConfig":"12"},{"size":6284,"mtime":1606863775877,"results":"17","hashOfConfig":"12"},{"size":209,"mtime":1606456606388,"results":"18","hashOfConfig":"12"},{"size":2067,"mtime":1606894405954,"results":"19","hashOfConfig":"12"},{"size":1778,"mtime":1606933051976,"results":"20","hashOfConfig":"12"},{"size":2967,"mtime":1607066245865,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17p8c2d",{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js",["45"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js",["46","47","48"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nimport SigninForm from './signinForm'\r\nimport AvailabilityTable from './available'\r\n\r\nexport default function ViewPage() {\r\n\r\n    const [meetingData, setMeetingData] = useState(null)\r\n    const [signedIn, setSignedIn] = useState(false)\r\n    const [fetchErr, setFetchErr] = useState(false)\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    function handlePath() {\r\n        console.log(\"handling path!!!\")\r\n        let path = location.pathname\r\n        if (path.length === 9) {\r\n            fetch('/api/meetings' + path, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n                .then(res => {\r\n                    console.log('raw server response: ', res)\r\n                    return res.status === 404 ? null : res.json()\r\n                })\r\n                .then(data => {\r\n                    if(data == null) {\r\n                        setFetchErr(true)\r\n                    }\r\n                    else {\r\n                        if(data.days.length == 0) data.days = [...data.dates]\r\n                        console.log(\"processed data: \", data)\r\n                        setMeetingData(data)\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            console.log(\"invalid path\")\r\n            setFetchErr(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => handlePath(), [])\r\n\r\n    if(fetchErr) {\r\n        return (\r\n            <p>Invalid URL!!!</p>\r\n        )\r\n    }\r\n\r\n    if (meetingData == null) {\r\n        return (\r\n            <p>Loading...</p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{meetingData.name}</h1>\r\n            <h2>{meetingData.description}</h2>\r\n            {!signedIn && <SigninForm signedIn={signedIn} setSignedIn={setSignedIn} meetingData={meetingData}/>}\r\n            <AvailabilityTable meetingData={meetingData}/>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js",["49","50"],"import React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\n\r\nexport default function SigninForm({ signedIn, setSignedIn, meetingData }) {\r\n\r\n    const { register, handleSubmit } = useForm()\r\n\r\n    function onSubmit(userInfo) {\r\n\r\n        let count = Math.max(meetingData.days.length, meetingData.dates.length)\r\n        let hours = meetingData.endTime - meetingData.startTime\r\n        let available = '0'.repeat(count * hours * 4)\r\n        console.log(available)\r\n        let data = {\r\n            name: userInfo.username,\r\n            password: userInfo.password === \"\" ? null : userInfo.password,\r\n            available: available\r\n        }\r\n\r\n        fetch('/api/people/' + meetingData.id, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => {\r\n            console.log('raw server response: ', res)\r\n            return res.status === 404 ? res : res.json()\r\n        })\r\n        .then(data => {\r\n            console.log(\"processed data\", data)\r\n            if(data == null) console.log(\"null res\")\r\n            else if(data.status != undefined || data.value != undefined) {\r\n                console.log(data.status, data.statusText, data.value)\r\n            }\r\n            else setSignedIn(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input type=\"text\" placeholder=\"username\" name=\"username\" ref={register({required: true, minLength:1, maxLength:20})}/>\r\n            <input type=\"password\" placeholder=\"password\" name=\"password\" ref={register({required: false, maxLength:20})} />\r\n            <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n    )\r\n}\r\n","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js",["51"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col } from 'react-grid-system'\r\n\r\nimport './tableStyles.css'\r\n\r\nlet style = {\r\n    color: \"red\",\r\n    backgroundColor: \"blue\",\r\n    width: \"120px\"\r\n}\r\n\r\nexport default function AvailabilityTable({ meetingData }) {\r\n    \r\n    const [selecting, setSelecting] = useState(false)\r\n    const [startpoint, setStartpoint] = useState(null)\r\n    const [endpoint, setEndpoint] = useState(null)\r\n\r\n    function Column({ day, time, availableCount, className }) {\r\n        return (\r\n            <Col onMouseDown={down} onMouseUp={up} onMouseEnter={hover} id={time + \"-\" + day} className={className} >{availableCount}</Col>\r\n        )\r\n    }\r\n    function hover(data) {\r\n        if(selecting) {\r\n            console.log(\"selecting\")\r\n            setEndpoint(parseId(data.target.id))\r\n        }\r\n        else {\r\n            console.log(\"hovering\")\r\n        }\r\n    }\r\n    function down(data) {\r\n        console.log(\"down!!!\")\r\n        setSelecting(true)\r\n        let coords = parseId(data.target.id)\r\n        setStartpoint(coords)\r\n        setStartpoint(coords)\r\n    }\r\n    function up(data) {\r\n        console.log(\"up!!!\")\r\n        setSelecting(false)\r\n        setStartpoint(null)\r\n        setEndpoint(null)\r\n    }\r\n    function save() {\r\n        console.log(\"saving changes\")\r\n    }\r\n    function parseId(id) {\r\n        return id.split('-').map(n => parseInt(n))\r\n    }\r\n    useEffect(() => {\r\n        console.log(\"raw points: \",startpoint, endpoint)\r\n        if(startpoint != null && endpoint != null) {\r\n            let topLeft = [Math.min(startpoint[0], endpoint[0]), Math.min(startpoint[1], endpoint[1])]\r\n            let bottomRight = [Math.max(startpoint[0], endpoint[0]), Math.max(startpoint[1], endpoint[1])]\r\n            console.log(\"processed: \",topLeft[0], topLeft[1])\r\n            for(let row = topLeft[0]; row <= bottomRight[0]; row++) {\r\n                for(let col = topLeft[1]; col <= bottomRight[1]; col++) {\r\n                    document.getElementById(row + \"-\" + col).className = \"selected\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    let table = []\r\n\r\n    for (let time = 0; time < meetingData.numTimeslots; time++) {\r\n        let currRow = []\r\n        for (let day = 0; day < meetingData.numDays; day++) {\r\n\r\n            let index = (day * meetingData.numTimeslots) + time\r\n            let availableCount = 0\r\n            meetingData.people.forEach(person => {\r\n                availableCount += person.available[index] === '1' ? 1 : 0\r\n            });\r\n            currRow.push(<Column day={day} time={time} availableCount={availableCount} className = \"table-col\" />)\r\n        }\r\n        table.push(<Row>{currRow}</Row>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>AvailabilityTable</p>\r\n            <Container>\r\n                {table}\r\n            </Container>\r\n            <button value=\"Save Changes\" onClick={save}></button>\r\n        </div>\r\n    )\r\n}",{"ruleId":null,"fatal":true,"severity":2,"message":"52","line":31,"column":11},{"ruleId":"53","severity":1,"message":"54","line":14,"column":11,"nodeType":"55","messageId":"56","endLine":14,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":34,"column":45,"nodeType":"59","messageId":"60","endLine":34,"endColumn":47},{"ruleId":"61","severity":1,"message":"62","line":46,"column":35,"nodeType":"63","endLine":46,"endColumn":37,"suggestions":"64"},{"ruleId":"57","severity":1,"message":"65","line":34,"column":33,"nodeType":"59","messageId":"60","endLine":34,"endColumn":35},{"ruleId":"57","severity":1,"message":"65","line":34,"column":60,"nodeType":"59","messageId":"60","endLine":34,"endColumn":62},{"ruleId":"53","severity":1,"message":"66","line":6,"column":5,"nodeType":"55","messageId":"56","endLine":6,"endColumn":10},"Parsing error: Unexpected token\n\n  29 |           <Route>\n  30 |             <ViewPage\n> 31 |           </Route>\n     |           ^\n  32 |         </Switch>\n  33 |     </Router>\n  34 |   </React.StrictMode>,","no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePath'. Either include it or remove the dependency array.","ArrayExpression",["67"],"Expected '!==' and instead saw '!='.","'style' is assigned a value but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [handlePath]",{"range":"70","text":"71"},[1548,1550],"[handlePath]"]