[{"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js":"1","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js":"2","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js":"3","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js":"4","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js":"5","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js":"6","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js":"7","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js":"8","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js":"9","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js":"10","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js":"11","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js":"12","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\timeTable.js":"13","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1002,"mtime":1606523619407,"results":"17","hashOfConfig":"16"},{"size":5617,"mtime":1606456407006,"results":"18","hashOfConfig":"16"},{"size":777,"mtime":1606437499067,"results":"19","hashOfConfig":"16"},{"size":1432,"mtime":1606442305526,"results":"20","hashOfConfig":"16"},{"size":6813,"mtime":1607452140315,"results":"21","hashOfConfig":"16"},{"size":209,"mtime":1606456606388,"results":"22","hashOfConfig":"16"},{"size":3766,"mtime":1607487210628,"results":"23","hashOfConfig":"16"},{"size":1902,"mtime":1607366730827,"results":"24","hashOfConfig":"16"},{"size":2941,"mtime":1607487163566,"results":"25","hashOfConfig":"16"},{"size":9607,"mtime":1607470352740,"results":"26","hashOfConfig":"16"},{"size":1517,"mtime":1607486596790,"results":"27","hashOfConfig":"16"},{"size":1748,"mtime":1607484552356,"results":"28","hashOfConfig":"16"},{"size":544,"mtime":1607487405721,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17p8c2d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js",["60"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js",["61","62","63","64"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nimport SigninForm from './signinForm'\r\nimport SignoutForm from './signoutForm'\r\nimport AvailabilityTable from './available'\r\nimport { sum1dAvailabilityArrays } from './utils'\r\nimport Moment from 'moment-timezone'\r\n\r\nexport default function ViewPage() {\r\n\r\n    const [meetingData, setMeetingData] = useState(null)\r\n    const [userData, setUserData] = useState(null)\r\n    const [timezone, _setTimezone] = useState(Moment.tz.guess())\r\n    const [fetchErr, setFetchErr] = useState(false)\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    function handlePath() {\r\n        console.log(\"handling path!!!\")\r\n        let path = location.pathname\r\n        if (path.length === 9) {\r\n            getMeeting(path)\r\n        }\r\n        else {\r\n            console.log(\"invalid path\")\r\n            setFetchErr(true)\r\n        }\r\n    }\r\n\r\n    function getMeeting(path) {\r\n        fetch('/api/meetings' + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => {\r\n                console.log('raw server response: ', res)\r\n                return res.status === 404 ? null : res.json()\r\n            })\r\n            .then(data => {\r\n                if (data == null) {\r\n                    setFetchErr(true)\r\n                }\r\n                else {\r\n                    if (data.days.length === 0) data.days = [...data.dates]\r\n                    data.availableCount = sum1dAvailabilityArrays(data.people, data.numTimeslots, data.numDays)\r\n                    console.log(\"processed data: \", data)\r\n\r\n                    if (data.surveyUsing === \"Dates\") data.localTimes = setTimezone(data.days, timezone)\r\n                    setMeetingData(data)\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    function setTimezone(days, usertz) {\r\n        let localTimes = []\r\n        days.forEach(day => {\r\n            console.log(Moment.utc(day).tz(usertz).toString())\r\n            localTimes.push(Moment.utc(day).tz(usertz))\r\n        })\r\n        _setTimezone(usertz)\r\n        return localTimes\r\n    }\r\n\r\n    function handleTimezone(e) {\r\n        console.log(\"changing timezone to \", e.target.value)\r\n        let localTimes = setTimezone(meetingData.days, e.target.value)\r\n        console.log(meetingData.localTimes)\r\n        setMeetingData({ ...meetingData, localTimes: localTimes })\r\n    }\r\n\r\n    function SignInSignOut() {\r\n        if(userData == null) return <SigninForm meetingData={meetingData} setMeetingData={setMeetingData} userData={userData} setUserData={setUserData} />\r\n        else return <SignoutForm meetingData={meetingData} setMeetingData={setMeetingData} userData={userData} setUserData={setUserData}/>\r\n    }\r\n\r\n    useEffect(() => handlePath(), [])\r\n    useEffect(() => {\r\n        console.log(\"new meeting data: \", meetingData)\r\n    }, [meetingData])\r\n\r\n    if (fetchErr) {\r\n        return (\r\n            <p>404 Invalid URL!!!</p>\r\n        )\r\n    }\r\n\r\n    if (meetingData == null) {\r\n        return (\r\n            <p>Loading...</p>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{meetingData.name}</h1>\r\n            <h2>{meetingData.description}</h2>\r\n            <SignInSignOut />\r\n            {userData && <AvailabilityTable meetingData={meetingData} userData={userData} setUserData={setUserData} />}\r\n            {meetingData.surveyUsing == \"Dates\" && <select name=\"timezone\" defaultValue={timezone} onChange={handleTimezone}>{Moment.tz.names().map(tz => <option >{tz}</option>)}</select>}\r\n            <p>Create your own!</p>\r\n            <p>Submit feedback</p>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js",["65","66"],"import React, { useState, useEffect, useMemo } from 'react'\r\n\r\nimport TableDragSelect from \"./table\";\r\nimport MemoizedTimeTable from \"./timeTable\"\r\nimport { convert2dTo1dArray } from './utils'\r\n\r\nimport './styles.css'\r\n\r\nexport default function AvailabilityTable({ meetingData, userData, setUserData }) {\r\n\r\n    const [state, setState] = useState({\r\n        cells: userData.available\r\n    })\r\n    const [saving, setSaving] = useState(false)\r\n    let handleChange = cells => {\r\n        console.log(\"new cells: \", cells)\r\n        setState({ cells });\r\n    }\r\n\r\n    function save() {\r\n        setSaving(true)\r\n        let data = {\r\n            name: userData.name,\r\n            available: convert2dTo1dArray(state.cells)\r\n        }\r\n        console.log(\"saving changes!\", data, meetingData.id)\r\n        fetch('/api/people/' + meetingData.id, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .catch(err => {\r\n                console.log(\"fetch error!\", err)\r\n                setSaving(false)\r\n            })\r\n            .then(res => {\r\n                setSaving(false)\r\n                console.log('raw server response: ', res)\r\n                return res.status === 204\r\n            })\r\n\r\n    }\r\n\r\n    function generateTableCells(numTimeslots, numDays) {\r\n        console.log(\"redrawing table!!!\")\r\n        let table = [], last = numTimeslots - 1\r\n        for (let time = 0; time < numTimeslots; time++) {\r\n            let currRow = []\r\n            for (let day = 0; day < numDays; day++) {\r\n                if (time % 4 === 0) currRow.push(<td style={{ borderTop: \"2px solid #9ea5b0\" }} />)\r\n                else if (time == last) currRow.push(<td style={{ borderBottom: \"2px solid #9ea5b0\" }} />)\r\n                else currRow.push(<td />)\r\n            }\r\n            table.push(<tr>{currRow}</tr>)\r\n        }\r\n        return table\r\n    }\r\n\r\n    let startingMoment = meetingData.surveyUsing === \"Dates\" ? meetingData.localTimes[0].format(\"h\") : meetingData.startTime\r\n    const table = useMemo(() => generateTableCells(meetingData.numTimeslots, meetingData.numDays), [meetingData.numTimeslots, meetingData.numDays])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <MemoizedTimeTable startingMoment={startingMoment} numTimeslots={meetingData.numTimeslots} surveyUsing={meetingData.surveyUsing} />\r\n\r\n                <TableDragSelect value={state.cells} onChange={handleChange} days={meetingData.surveyUsing === \"Dates\" ? meetingData.localTimes : meetingData.days}>\r\n                    {table}\r\n                </TableDragSelect>\r\n            </div>\r\n            <div className=\"container-bottom\">\r\n                <button value=\"Save\" onClick={save} className=\"myButton\">{saving ? \"SAVING...\" : \" Save\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\timeTable.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js",[],{"ruleId":"67","severity":1,"message":"68","line":9,"column":3,"nodeType":"69","messageId":"70","endLine":9,"endColumn":7},{"ruleId":"67","severity":1,"message":"71","line":1,"column":38,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"72","line":18,"column":11,"nodeType":"69","messageId":"70","endLine":18,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":81,"column":35,"nodeType":"75","endLine":81,"endColumn":37,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":104,"column":38,"nodeType":"79","messageId":"80","endLine":104,"endColumn":40},{"ruleId":"67","severity":1,"message":"81","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":53,"column":31,"nodeType":"79","messageId":"80","endLine":53,"endColumn":33},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePath'. Either include it or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",{"desc":"83","fix":"84"},"Update the dependencies array to be: [handlePath]",{"range":"85","text":"86"},[2899,2901],"[handlePath]"]