[{"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js":"1","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js":"2","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js":"3","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js":"4","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js":"5","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js":"6","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js":"7","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js":"8","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js":"9","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js":"10","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js":"11","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js":"12","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\timeTable.js":"13","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js":"14","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\navbar.js":"15","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\footer.js":"16","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\groupAvailable.js":"17","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\legend.js":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1532,"mtime":1608144780685,"results":"21","hashOfConfig":"20"},{"size":5617,"mtime":1606456407006,"results":"22","hashOfConfig":"20"},{"size":797,"mtime":1607664988595,"results":"23","hashOfConfig":"20"},{"size":2395,"mtime":1608144744704,"results":"24","hashOfConfig":"20"},{"size":11188,"mtime":1608145404693,"results":"25","hashOfConfig":"20"},{"size":1586,"mtime":1608150094331,"results":"26","hashOfConfig":"20"},{"size":7131,"mtime":1608161462196,"results":"27","hashOfConfig":"20"},{"size":3632,"mtime":1608144524118,"results":"28","hashOfConfig":"20"},{"size":5150,"mtime":1608154604857,"results":"29","hashOfConfig":"20"},{"size":10079,"mtime":1608154310217,"results":"30","hashOfConfig":"20"},{"size":2572,"mtime":1608153333259,"results":"31","hashOfConfig":"20"},{"size":1895,"mtime":1608154460201,"results":"32","hashOfConfig":"20"},{"size":1745,"mtime":1608144551195,"results":"33","hashOfConfig":"20"},{"size":633,"mtime":1608156598964,"results":"34","hashOfConfig":"20"},{"size":585,"mtime":1608156572777,"results":"35","hashOfConfig":"20"},{"size":2027,"mtime":1608154192102,"results":"36","hashOfConfig":"20"},{"size":493,"mtime":1607995996163,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17p8c2d",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\reportWebVitals.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js",[],["78","79"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\CreateForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js",[],["80","81"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js",["82"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js",["83","84","85"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js",["86"],"import React, { useState, useMemo, useEffect } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport TableDragSelect from \"./table\";\r\nimport MemoizedTimeTable from \"./timeTable\"\r\nimport { convert2dTo1dArray } from './utils'\r\nimport GroupAvailable from './groupAvailable'\r\nimport Legend from './legend'\r\n\r\nimport edit from '../img/edit.png'\r\nimport view from '../img/view.png'\r\nimport './styles.css'\r\n\r\nexport default function AvailabilityTable({ meetingData, userData, setUserData, getMeeting }) {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [currentCoords, setCurrentCoords] = useState(null)\r\n    const [editing, setEditing] = useState(userData !== null)\r\n\r\n    let handleChange = cells => {\r\n        //console.log(\"new cells: \", cells)\r\n        setUserData({ ...userData, available: cells });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userData === null) setEditing(false)\r\n        else setEditing(true)\r\n    }, [userData])\r\n\r\n    function save() {\r\n        setSaving(true)\r\n        setEditing(false)\r\n        let data = {\r\n            name: userData.name,\r\n            available: convert2dTo1dArray(userData.available)\r\n        }\r\n        console.log(\"saving changes!\", data, meetingData.id)\r\n        fetch('/api/people/' + meetingData.id, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .catch(err => {\r\n                console.log(\"fetch error!\", err)\r\n                setSaving(false)\r\n            })\r\n            .then(res => {\r\n                setSaving(false)\r\n                console.log('raw server response: ', res)\r\n                if (res.status === 204) {\r\n                    getMeeting('/' + meetingData.id)\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n\r\n    }\r\n\r\n    function toggleEditing() {\r\n        console.log(\"toggling editing!\")\r\n        setEditing(!editing)\r\n    }\r\n\r\n    function generateTableCells(numTimeslots, numDays) {\r\n        console.log(\"generating raw table rows and cols!!!\")\r\n        let table = []\r\n        for (let time = 0; time < numTimeslots; time++) {\r\n            let currRow = []\r\n            for (let day = 0; day < numDays; day++) {\r\n                currRow.push(<td key={day}></td>)\r\n            }\r\n            table.push(<tr key={time}>{currRow}</tr>)\r\n        }\r\n        return table\r\n    }\r\n\r\n    function ToggleButton() {\r\n        return (\r\n            <button className=\"toggle-button\"\r\n                onClick={toggleEditing} disabled={!userData}><img style={{ width: \"1.5rem\", height: \"1.5rem\" }} src={editing ? view : edit}></img></button>\r\n        )\r\n    }\r\n\r\n    let startingMoment = meetingData.surveyUsing === \"Dates\" ? meetingData.localTimes[0].format(\"H\") : meetingData.startTime\r\n    const table = useMemo(() => generateTableCells(meetingData.numTimeslots, meetingData.numDays), [meetingData.numTimeslots, meetingData.numDays])\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col>\r\n                        {meetingData.numRespondents > 0 && <Legend numRespondents={meetingData.numRespondents} />}\r\n                    </Col>\r\n                    <Col>\r\n                    <ToggleButton />\r\n                        <div className=\"container\">\r\n                            <MemoizedTimeTable startingMoment={startingMoment} numTimeslots={meetingData.numTimeslots} surveyUsing={meetingData.surveyUsing} ToggleButton = {ToggleButton} />\r\n                            <TableDragSelect\r\n                                value={userData === null ? null : userData.available}\r\n                                onChange={handleChange}\r\n                                days={meetingData.surveyUsing === \"Dates\" ? meetingData.localTimes : meetingData.days}\r\n                                colors={meetingData.colors}\r\n                                setCurrentCoords={setCurrentCoords}\r\n                                currentCoords={currentCoords}\r\n                                editing={editing}>\r\n                                {table}\r\n                            </TableDragSelect>\r\n\r\n                        </div>\r\n                        {userData && <button style={{ marginTop: \"2rem\" }} className=\"button-important\" value=\"Save\" onClick={save}>{saving ? \"SAVING...\" : \" Save Response\"}</button>}\r\n                    </Col>\r\n                    <Col>\r\n                        <GroupAvailable\r\n                            numRespondents={meetingData.numRespondents}\r\n                            people={meetingData.people}\r\n                            currentCoords={currentCoords}\r\n                            moments={meetingData.surveyUsing === 'Dates' ? meetingData.localTimes : { days: meetingData.days, startTime: meetingData.startTime }}\r\n                            surveyUsing={meetingData.surveyUsing} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"container-bottom\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js",["87","88","89","90"],"export const convert1dTo2dArray = (input, numRows, numCols) => {\r\n    let output = []\r\n    for (let row = 0; row < numRows; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < numCols; col++) {\r\n            currRow.push(input[getIndexFromCoords(row, col, numCols)])\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const subtract2dArrays = (a, b) => {\r\n    for (let row = 0; row < a.length; row++) {\r\n        for (let col = 0; col < a[0].length; col++) {\r\n            a[row][col] -= b[row][col] === true ? 1 : 0\r\n        }\r\n    }\r\n    return a\r\n}\r\n\r\nexport const add2dArrays = (a, b) => {\r\n    //console.log(\"addition input:\", a, b)\r\n    for (let row = 0; row < a.length; row++) {\r\n        for (let col = 0; col < a[0].length; col++) {\r\n            a[row][col] += b[row][col]\r\n        }\r\n    }\r\n    //console.log(\"addition output: \", a)\r\n    return a\r\n}\r\n\r\nexport const getIndexFromCoords = (row, col, numCols) => {\r\n    return (row * numCols) + col\r\n}\r\n\r\nexport const convert2dTo1dArray = (matrix) => {\r\n    let output = []\r\n    matrix.forEach(row => {\r\n        row.forEach(cell => {\r\n            output.push(cell)\r\n        })\r\n    })\r\n    //console.log(\"1d array:\", output)\r\n    return output\r\n}\r\n\r\nexport const initialize2dIntArray = (numRows, numCols) => {\r\n    let output = []\r\n    for (let row = 0; row < numRows; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < numCols; col++) {\r\n            currRow.push(0)\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const map2dArray= (matrix, num) => {\r\n    console.log(\"mapping matrix to this many respondents: \", num)\r\n    let output = []\r\n    for (let row = 0; row < matrix.length; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < matrix[0].length; col++) {\r\n            if(num === 0 || matrix[row][col] === 0) currRow.push(\"#ffffff\")\r\n            else if(num === 1) {\r\n                currRow.push(\"#3a506b\")\r\n            }\r\n            else currRow.push(lerpColor(0xb5d1f5, 0x3A506B , (matrix[row][col]-1)/(num-1)))\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const lerpColor = function(a, b, amount) {\r\n    const ar = a >> 16,\r\n          ag = a >> 8 & 0xff,\r\n          ab = a & 0xff,\r\n\r\n          br = b >> 16,\r\n          bg = b >> 8 & 0xff,\r\n          bb = b & 0xff,\r\n\r\n          rr = ar + amount * (br - ar),\r\n          rg = ag + amount * (bg - ag),\r\n          rb = ab + amount * (bb - ab);\r\n\r\n    return '#' + ((rr << 16) + (rg << 8) + (rb | 0)).toString(16);\r\n}","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\timeTable.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\navbar.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\footer.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\groupAvailable.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\legend.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":96,"column":8,"nodeType":"99","endLine":96,"endColumn":46,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":22,"column":11,"nodeType":"103","messageId":"104","endLine":22,"endColumn":18},{"ruleId":"97","severity":1,"message":"105","line":92,"column":35,"nodeType":"99","endLine":92,"endColumn":37,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":111,"column":21,"nodeType":"109","endLine":111,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":82,"column":62,"nodeType":"109","endLine":82,"endColumn":141},{"ruleId":"110","severity":1,"message":"111","line":79,"column":18,"nodeType":"112","messageId":"113","endLine":79,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":79,"column":23,"nodeType":"112","messageId":"113","endLine":79,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":83,"column":18,"nodeType":"112","messageId":"113","endLine":83,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":83,"column":23,"nodeType":"112","messageId":"113","endLine":83,"endColumn":24},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'daySelectionError'. Either include it or remove the dependency array.","ArrayExpression",["116"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'handlePath'. Either include it or remove the dependency array.",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [daySelectionError, selectedDates, selectedDays, showCal]",{"range":"122","text":"123"},"Update the dependencies array to be: [handlePath]",{"range":"124","text":"125"},[3166,3204],"[daySelectionError, selectedDates, selectedDays, showCal]",[3726,3728],"[handlePath]"]