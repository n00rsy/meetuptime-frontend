[{"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js":"1","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js":"2","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js":"3","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js":"4","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js":"5","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\background.js":"6","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js":"7","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js":"8","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js":"9","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\staticPage.js":"10","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\howto.js":"11","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js":"12","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\groupAvailable.js":"13","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\about.js":"14","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\faq.js":"15","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\footer.js":"16","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\navbar.js":"17","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js":"18","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js":"19","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\spinner.js":"20"},{"size":1962,"mtime":1610053308168,"results":"21","hashOfConfig":"22"},{"size":5393,"mtime":1610398574445,"results":"23","hashOfConfig":"22"},{"size":2428,"mtime":1608255957915,"results":"24","hashOfConfig":"22"},{"size":12013,"mtime":1610397800357,"results":"25","hashOfConfig":"22"},{"size":6671,"mtime":1610398084253,"results":"26","hashOfConfig":"22"},{"size":2287,"mtime":1610058328369,"results":"27","hashOfConfig":"22"},{"size":388,"mtime":1608484241352,"results":"28","hashOfConfig":"22"},{"size":2572,"mtime":1608153333259,"results":"29","hashOfConfig":"22"},{"size":3754,"mtime":1610058008693,"results":"30","hashOfConfig":"22"},{"size":343,"mtime":1609716097249,"results":"31","hashOfConfig":"22"},{"size":1401,"mtime":1610087521282,"results":"32","hashOfConfig":"22"},{"size":1800,"mtime":1608254567223,"results":"33","hashOfConfig":"22"},{"size":2027,"mtime":1608154192102,"results":"34","hashOfConfig":"22"},{"size":1605,"mtime":1610087555752,"results":"35","hashOfConfig":"22"},{"size":1247,"mtime":1610087156491,"results":"36","hashOfConfig":"22"},{"size":618,"mtime":1610396566407,"results":"37","hashOfConfig":"22"},{"size":764,"mtime":1610059509850,"results":"38","hashOfConfig":"22"},{"size":10079,"mtime":1608154310217,"results":"39","hashOfConfig":"22"},{"size":797,"mtime":1610398202131,"results":"40","hashOfConfig":"22"},{"size":437,"mtime":1610398150357,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17p8c2d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\index.js",[],["88","89"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\available.js",["90"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\week.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createForm.js",["91","92","93"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\viewPage.js",["94","95","96"],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { Form } from 'react-bootstrap'\r\nimport Moment from 'moment-timezone'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\n\r\nimport SigninForm from './signinForm'\r\nimport SignoutForm from './signoutForm'\r\nimport AvailabilityTable from './available'\r\nimport { convert1dTo2dArray, initialize2dIntArray, add2dArrays, map2dArray } from './utils'\r\nimport copy from '../img/copy.png'\r\nimport Spinner from '../shared/spinner'\r\nimport CONFIG from '../config.json'\r\n\r\nexport default function ViewPage() {\r\n\r\n    const [meetingData, setMeetingData] = useState(null)\r\n    const [userData, setUserData] = useState(null)\r\n    const [timezone, _setTimezone] = useState(Moment.tz.guess())\r\n    const [fetchErr, setFetchErr] = useState(false)\r\n    const [copied, setCopied] = useState(false)\r\n\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n\r\n    function handlePath() {\r\n        document.getElementsByClassName('app-wrapper')[0].style.backgroundColor = 'white'\r\n        console.log(\"handling path!!!\")\r\n        let path = location.pathname\r\n        if (path.length === 9) {\r\n            getMeeting(path)\r\n        }\r\n        else {\r\n            console.log(\"invalid path\", path)\r\n            setFetchErr(true)\r\n        }\r\n    }\r\n\r\n    function getMeeting(path) {\r\n        fetch(CONFIG.backendApi + '/api/meetings' + path, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .catch(err => {\r\n                console.log(\"fetch falied!!!\")\r\n                return null\r\n            })\r\n            .then(res => {\r\n                console.log('raw server response: ', res)\r\n                return (!res || res.status === 404) ? null : res.json()\r\n            })\r\n            .then(data => {\r\n                if (!data) {\r\n                    setFetchErr(true)\r\n                }\r\n                else {\r\n                    if (data.days.length === 0) data.days = [...data.dates]\r\n\r\n                    //let availableCount = initialize2dIntArray(data.numTimeslots, data.numDays)\r\n                    data.availableCount = initialize2dIntArray(data.numTimeslots, data.numDays)\r\n                    data.numRespondents = data.people.length\r\n                    data.people.forEach(person => {\r\n                        person.available = convert1dTo2dArray(person.available, data.numTimeslots, data.numDays)\r\n                        data.availableCount = add2dArrays(data.availableCount, person.available)\r\n                        //console.log(\"converted available array: \" + person.name, person.available)\r\n                    })\r\n                    data.colors = map2dArray(data.availableCount, data.numRespondents)\r\n                    if (data.surveyUsing === \"Dates\") data.localTimes = setTimezone(data.days, timezone)\r\n                    console.log(\"processed data: \", data)\r\n                    setMeetingData(data)\r\n                    return data\r\n                }\r\n            })\r\n    }\r\n\r\n    function setTimezone(days, usertz) {\r\n        let localTimes = []\r\n        days.forEach(day => {\r\n            localTimes.push(Moment.utc(day).tz(usertz))\r\n        })\r\n        _setTimezone(usertz)\r\n        return localTimes\r\n    }\r\n\r\n    function handleTimezone(e) {\r\n        console.log(\"changing timezone to \", e.target.value)\r\n        let localTimes = setTimezone(meetingData.days, e.target.value)\r\n        console.log(meetingData.localTimes)\r\n        setMeetingData({ ...meetingData, localTimes: localTimes })\r\n    }\r\n\r\n    function SignInSignOut() {\r\n        if (userData == null) return <SigninForm meetingData={meetingData} setMeetingData={setMeetingData} userData={userData} setUserData={setUserData} />\r\n        else return <SignoutForm userData={userData} setUserData={setUserData} getMeeting={() => getMeeting('/' + meetingData.id)} meetingId={meetingData.id} />\r\n    }\r\n\r\n    useEffect(() => handlePath(), [])\r\n    useEffect(() => {\r\n        console.log(\"new meeting data: \", meetingData)\r\n    }, [meetingData])\r\n\r\n    if (fetchErr) {\r\n        return (\r\n            <p>404 Invalid URL!!!</p>\r\n        )\r\n    }\r\n\r\n    if (meetingData == null) {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"background\">\r\n                </div>\r\n                <div className=\"loading-wrapper\">\r\n                    <h4 style = {{color: \"white\"}}>Loading Event...</h4>\r\n                    <Spinner />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function shareMeeting() {\r\n        let shareData = {\r\n            url: \"https://planpoll.com/\" + meetingData.code,\r\n            title: meetingData.name\r\n        }\r\n        console.log(\"sharing meeting\", shareData)\r\n        if(isMobile) {\r\n            navigator.share(shareData).then(() => setCopied(true))\r\n        }\r\n        else {\r\n            navigator.clipboard.writeText(shareData.url).then(() => setCopied(true))\r\n        }\r\n    }\r\n\r\n    function Share() {\r\n        return (\r\n            <div>\r\n                <h6 style={{ fontWeight: \"normal\"}}>\r\n                    Event Link: <span style = {{opacity: copied ? \"0.65\" : \"1\" }} onClick={shareMeeting} className={\"share\"}>{\"planpoll.com/\" + meetingData.code} <img style={{height:\"1rem\",marginBottom:\"0.3rem\"}} src={copy}></img></span>\r\n                </h6>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"header-container\">\r\n                <div className=\"title-container\">\r\n                    <h1 >{meetingData.name}</h1>\r\n                    <h2 >{meetingData.description}</h2>\r\n                    <Share />\r\n                </div>\r\n                <div className=\"sign-form\">\r\n                    <SignInSignOut />\r\n                </div>\r\n                {meetingData.surveyUsing === \"Dates\" && <div>\r\n                    <span style={{ paddingRight: \"1rem\" }}>Your timezone:</span>\r\n                    <Form.Control as=\"select\" style={{ maxWidth: \"20rem\", display: \"inline\" }} name=\"timezone\" defaultValue={timezone} onChange={handleTimezone}>\r\n                        {Moment.tz.names().map(tz => <option >{tz}</option>)}\r\n                    </Form.Control>\r\n                </div>}\r\n            </div>\r\n            {<AvailabilityTable meetingData={meetingData} userData={userData} setUserData={setUserData} getMeeting={getMeeting} />}\r\n            <a style={{ color: \"var(--highlight)\", paddingTop: \"1.5rem\", width: \"10rem\", margin: \"auto\" }} href=\"/\">Create Your Own</a>\r\n        </div>\r\n    )\r\n}","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\background.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\createPage.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\utils.js",["97","98","99","100"],"export const convert1dTo2dArray = (input, numRows, numCols) => {\r\n    let output = []\r\n    for (let row = 0; row < numRows; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < numCols; col++) {\r\n            currRow.push(input[getIndexFromCoords(row, col, numCols)])\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const subtract2dArrays = (a, b) => {\r\n    for (let row = 0; row < a.length; row++) {\r\n        for (let col = 0; col < a[0].length; col++) {\r\n            a[row][col] -= b[row][col] === true ? 1 : 0\r\n        }\r\n    }\r\n    return a\r\n}\r\n\r\nexport const add2dArrays = (a, b) => {\r\n    //console.log(\"addition input:\", a, b)\r\n    for (let row = 0; row < a.length; row++) {\r\n        for (let col = 0; col < a[0].length; col++) {\r\n            a[row][col] += b[row][col]\r\n        }\r\n    }\r\n    //console.log(\"addition output: \", a)\r\n    return a\r\n}\r\n\r\nexport const getIndexFromCoords = (row, col, numCols) => {\r\n    return (row * numCols) + col\r\n}\r\n\r\nexport const convert2dTo1dArray = (matrix) => {\r\n    let output = []\r\n    matrix.forEach(row => {\r\n        row.forEach(cell => {\r\n            output.push(cell)\r\n        })\r\n    })\r\n    //console.log(\"1d array:\", output)\r\n    return output\r\n}\r\n\r\nexport const initialize2dIntArray = (numRows, numCols) => {\r\n    let output = []\r\n    for (let row = 0; row < numRows; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < numCols; col++) {\r\n            currRow.push(0)\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const map2dArray= (matrix, num) => {\r\n    console.log(\"mapping matrix to this many respondents: \", num)\r\n    let output = []\r\n    for (let row = 0; row < matrix.length; row++) {\r\n        let currRow = []\r\n        for (let col = 0; col < matrix[0].length; col++) {\r\n            if(num === 0 || matrix[row][col] === 0) currRow.push(\"#ffffff\")\r\n            else if(num === 1) {\r\n                currRow.push(\"#3a506b\")\r\n            }\r\n            else currRow.push(lerpColor(0xb5d1f5, 0x3A506B , (matrix[row][col]-1)/(num-1)))\r\n        }\r\n        output.push(currRow)\r\n    }\r\n    return output\r\n}\r\n\r\nexport const lerpColor = function(a, b, amount) {\r\n    const ar = a >> 16,\r\n          ag = a >> 8 & 0xff,\r\n          ab = a & 0xff,\r\n\r\n          br = b >> 16,\r\n          bg = b >> 8 & 0xff,\r\n          bb = b & 0xff,\r\n\r\n          rr = ar + amount * (br - ar),\r\n          rg = ag + amount * (bg - ag),\r\n          rb = ab + amount * (bb - ab);\r\n\r\n    return '#' + ((rr << 16) + (rg << 8) + (rb | 0)).toString(16);\r\n}",["101","102"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signinForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\staticPage.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\howto.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\signoutForm.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\groupAvailable.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\about.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\staticPages\\faq.js",[],["103","104"],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\footer.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\navbar.js",["105"],"import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport Logo from '../img/logo.png'\r\nexport default function NavigationBar() {\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" style={{ zIndex: \"10000\" }}>\r\n      <Navbar.Brand href=\"/\"><img src={Logo} style={{ height: \"4rem\" }} /></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\" activeKey={window.location.pathname}>\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n          <Nav.Link href=\"/howto\">How to</Nav.Link>\r\n          <Nav.Link href=\"/about\">About</Nav.Link>\r\n          <Nav.Link href=\"/faq\">FAQ</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n\r\n}","C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\viewPage\\table.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\createPage\\calendar.js",[],"C:\\Users\\noors\\Documents\\meetuptime-frontend\\meetuptime\\src\\shared\\spinner.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":83,"column":62,"nodeType":"112","endLine":83,"endColumn":141},{"ruleId":"113","severity":1,"message":"114","line":5,"column":16,"nodeType":"115","messageId":"116","endLine":5,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":5,"column":21,"nodeType":"115","messageId":"116","endLine":5,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":99,"column":8,"nodeType":"120","endLine":99,"endColumn":46,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"122","line":25,"column":11,"nodeType":"115","messageId":"116","endLine":25,"endColumn":18},{"ruleId":"118","severity":1,"message":"123","line":100,"column":35,"nodeType":"120","endLine":100,"endColumn":37,"suggestions":"124"},{"ruleId":"110","severity":1,"message":"111","line":142,"column":163,"nodeType":"112","endLine":142,"endColumn":225},{"ruleId":"125","severity":1,"message":"126","line":79,"column":18,"nodeType":"127","messageId":"128","endLine":79,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":79,"column":23,"nodeType":"127","messageId":"128","endLine":79,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":83,"column":18,"nodeType":"127","messageId":"128","endLine":83,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":83,"column":23,"nodeType":"127","messageId":"128","endLine":83,"endColumn":24},{"ruleId":"106","replacedBy":"129"},{"ruleId":"108","replacedBy":"130"},{"ruleId":"106","replacedBy":"131"},{"ruleId":"108","replacedBy":"132"},{"ruleId":"110","severity":1,"message":"111","line":8,"column":30,"nodeType":"112","endLine":8,"endColumn":75},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'daySelectionError'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handlePath'. Either include it or remove the dependency array.",["136"],"no-mixed-operators","Unexpected mix of '>>' and '&'.","BinaryExpression","unexpectedMixedOperator",["133"],["134"],["133"],["134"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [daySelectionError, selectedDates, selectedDays, showCal]",{"range":"141","text":"142"},"Update the dependencies array to be: [handlePath]",{"range":"143","text":"144"},[3287,3325],"[daySelectionError, selectedDates, selectedDays, showCal]",[4041,4043],"[handlePath]"]